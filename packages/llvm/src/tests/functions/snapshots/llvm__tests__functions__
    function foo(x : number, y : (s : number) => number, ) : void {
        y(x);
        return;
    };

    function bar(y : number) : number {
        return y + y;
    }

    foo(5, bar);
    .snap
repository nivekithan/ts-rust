---
source: packages/llvm/src/tests/functions/mod.rs
expression: output

---
; ModuleID = 'main'
source_filename = "main"

define void @main() personality void ()* @__typescript__personality {
entry:
  invoke void @foo_(double 5.000000e+00, double (double)* @bar_)
          to label %Block_0 unwind label %Block_1

Block_0:                                          ; preds = %entry
  ret void

Block_1:                                          ; preds = %entry
  %"0" = landingpad i64
          cleanup
}

define void @__typescript__personality() {
entry:
  ret void
}

define void @foo_(double %0, double (double)* %1) personality void ()* @__typescript__personality {
main:
  %x_ = alloca double, align 8
  store double %0, double* %x_, align 8
  %"|_temp0" = alloca double, align 8
  %"4" = load double, double* %x_, align 8
  %"2" = invoke double %1(double %"4")
          to label %Block_0 unwind label %Block_1

Block_0:                                          ; preds = %main
  store double %"2", double* %"|_temp0", align 8
  ret void

Block_1:                                          ; preds = %main
  %"3" = landingpad i64
          cleanup
}

define double @bar_(double %0) {
main:
  %y_ = alloca double, align 8
  store double %0, double* %y_, align 8
  %"2" = load double, double* %y_, align 8
  %"3" = load double, double* %y_, align 8
  %"1" = fadd double %"2", %"3"
  ret double %"1"
}

